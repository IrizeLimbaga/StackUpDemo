// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StackUpDemo.Context;

#nullable disable

namespace StackUpDemo.Migrations
{
    [DbContext(typeof(StackUpDemoContext))]
    [Migration("20230222075854_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StackUpDemo.Model.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("EntityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("StatusMaps");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            EntityStatus = "Active"
                        },
                        new
                        {
                            StatusId = 2,
                            EntityStatus = "InActive"
                        },
                        new
                        {
                            StatusId = 3,
                            EntityStatus = "Pending"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
